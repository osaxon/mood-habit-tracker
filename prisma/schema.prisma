// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider     = "mysql"
    url          = env("DATABASE_URL")
    relationMode = "prisma"
}

model Account {
    id                String  @id @default(cuid())
    userId            String
    type              String
    provider          String
    providerAccountId String
    refresh_token     String? @db.Text
    access_token      String? @db.Text
    expires_at        Int?
    token_type        String?
    scope             String?
    id_token          String? @db.Text
    session_state     String?

    user User @relation(fields: [userId], references: [id], onDelete: Cascade)

    @@unique([provider, providerAccountId])
    @@index([userId])
}

model Session {
    id           String   @id @default(cuid())
    sessionToken String   @unique
    userId       String
    expires      DateTime
    user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

    @@index([userId])
}

model VerificationToken {
    identifier String
    token      String   @unique
    expires    DateTime

    @@unique([identifier, token])
}

model User {
    id            String    @id @default(cuid())
    name          String?
    email         String?   @unique
    emailVerified DateTime?
    image         String?
    accounts      Account[]
    sessions      Session[]

    // the habits selected by a user to track on their profile
    habitInstances HabitInstance[]

    // the individual activity records
    habitRecords UserHabitRecord[]
}

// Pre-defined Habits for users to select
model HabitDefinition {
    id             String          @id @default(cuid())
    habitName      String
    createdAt      DateTime        @default(now())
    habitInstances HabitInstance[]
}

// One of these will be created when a user selects a habit
model HabitInstance {
    id                String          @id @default(cuid())
    active            Boolean         @default(true)
    habitDefinition   HabitDefinition @relation(fields: [habitDefinitionId], references: [id])
    habitDefinitionId String
    userId            String
    user              User            @relation(fields: [userId], references: [id])

    target      Float
    targetUnit  TargetUnit
    targetFreq  TargetFrequency @default(Daily)
    completed   Boolean         @default(false)
    completedAt DateTime?

    records UserHabitRecord[]

    @@index([userId])
    @@index([habitDefinitionId])
}

// The activity log for users habits
model UserHabitRecord {
    id    String @id @default(cuid())
    value Float

    habitId String
    habit   HabitInstance @relation(fields: [habitId], references: [id])

    userId String
    user   User   @relation(fields: [userId], references: [id])

    createdAt DateTime

    @@index([userId])
    @@index([habitId])
}

enum TargetUnit {
    Minutes
    Hours
    Days
    Litres
    Number
}

enum TargetFrequency {
    Daily
    Weekly
    Monthly
    Annually
}
